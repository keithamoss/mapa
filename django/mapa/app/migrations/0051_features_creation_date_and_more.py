# Generated by Django 4.2.11 on 2024-05-14 12:22

import datetime

from mapa.app.models import Features

from django.db import connection, migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0050_remove_profile_last_whats_new_view_and_more'),
    ]

    def set_creation_date_from_history(apps, schema_editor):
        cursor = connection.cursor()

        cursor.execute("UPDATE mapa.app_features AS f SET creation_date = (SELECT MIN(last_updated_date) FROM mapa.app_historicalfeatures WHERE id = f.id)")

        # 23 features with ids <= 26 have no history objects for some reason (perhaps before we started tracking them?)
        # This is the date we imported and added all of these initial features
        cursor.execute("UPDATE mapa.app_features AS f SET creation_date = '2023-06-05 02:26:50.874909+00' WHERE creation_date IS NULL")

        cursor.execute("UPDATE mapa.app_historicalfeatures AS hf SET creation_date = (SELECT f.creation_date FROM mapa.app_features AS f WHERE f.id = hf.id)")

    operations = [
        migrations.AddField(
            model_name='features',
            name='creation_date',
            field=models.DateTimeField(auto_now_add=True, null=True, default=None),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalfeatures',
            name='creation_date',
            field=models.DateTimeField(blank=True, null=True, default=None, editable=False),
            preserve_default=False,
        ),
        migrations.RunPython(set_creation_date_from_history),
    ]
