name: Staging CI/CD

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]
    types: [closed]

permissions:
  id-token: write
  contents: read

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    environment: STAGING
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup Env Vars
        run: |
          mkdir secrets
          mkdir secrets/staging
          echo "${{secrets.WEB_STAGING_ENV }}" > secrets/staging/web.staging.env
          echo "${{secrets.WEB_DB_STAGING_ENV }}" > secrets/staging/web-db.staging.env
          echo "${{secrets.FRONTEND_STAGING_ENV }}" > secrets/staging/frontend.staging.env

      - name: Build - Prep
        run: |
          mkdir ./build
          mkdir ./nginx-prod/build

      - name: Frontend - Build
        run: docker compose --file build_staging.yml run frontend

      - name: Upload artifact for container build jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-frontend
          path: ./nginx-prod/build/frontend.tgz

  build-django-static:
    runs-on: ubuntu-latest
    environment: STAGING
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup Env Vars
        run: |
          mkdir secrets
          mkdir secrets/staging
          echo "${{secrets.WEB_STAGING_ENV }}" > secrets/staging/web.staging.env
          echo "${{secrets.WEB_DB_STAGING_ENV }}" > secrets/staging/web-db.staging.env
          echo "${{secrets.FRONTEND_STAGING_ENV }}" > secrets/staging/frontend.staging.env

      - name: Build - Prep
        run: |
          mkdir ./build
          mkdir ./nginx-prod/build

      - name: Django - Build
        run: docker compose --file build_staging.yml run django

      - name: Upload artifact for container build jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-django
          path: ./nginx-prod/build/django.tgz

  build-django:
    runs-on: ubuntu-latest
    environment: STAGING
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_TARGET_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Containers - Build Django
        run: docker build -t 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/staging/mapa-django-lambdas:$GITHUB_SHA -t 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/staging/mapa-django-lambdas:latest .
        working-directory: django

      - name: Containers - Push to AWS
        run: |
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com
          docker push 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/staging/mapa-django-lambdas --all-tags

  deploy-app:
    runs-on: ubuntu-latest
    environment: STAGING
    needs: [build-frontend, build-django-static, build-django]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_TARGET_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install CDK and deps
        run: |
          npm install -g aws-cdk
          npm --version
          aws --version
          cdk --version
          cd ./django/mapa-cdk-test
          npm install .
          mkdir build

      - name: Download artifacts for deployment
        uses: actions/download-artifact@v4
        with:
          path: ./django/mapa-cdk-test/build/

      - name: Move artifacts
        run: |
          cd ./django/mapa-cdk-test/build/

          tar -xvf build-frontend/frontend.tgz
          rm -rf ./build-frontend/

          mkdir api
          tar -xvf ./build-django/django.tgz --directory ./api/
          rm -rf ./build-django/

      - name: Test 2
        run: |
          cd ./django/mapa-cdk-test
          cdk list --context env=staging
          # cdk deploy MapaInfraStack --context env=staging --require-approval never
          # cdk deploy MapaAppStack --context env=staging --require-approval never
          cdk deploy MapaStaticSiteStack --context env=staging --require-approval never
          # aws lambda update-function-code --function-name Mapa-Staging-Django-Lambda --image-uri arn:aws:lambda:ap-southeast-2:429260965153:function:Mapa-Staging-Django-Lambda:latest --region ap-southeast-2

      - name: Setup Debug Session
        uses: csexton/debugger-action@master
