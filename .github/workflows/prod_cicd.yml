name: Production CI/CD

on:
  push:
    branches: [production]
  pull_request:
    branches: [production]
    types: [closed]

permissions:
  id-token: write
  contents: read

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup Env Vars
        run: |
          mkdir secrets
          mkdir secrets/prod
          echo "${{ secrets.WEB_ENV }}" > secrets/prod/web.prod.env
          echo "${{ secrets.WEB_DB_ENV }}" > secrets/prod/web-db.prod.env
          echo "${{ secrets.FRONTEND_ENV }}" > secrets/prod/frontend.prod.env

      - name: Build - Prep
        run: |
          mkdir ./build
          mkdir ./nginx-prod/build

      - name: Frontend - Build
        run: docker compose --file build_production.yml run frontend

      - name: Upload artifact for container build jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-frontend
          path: ./nginx-prod/build/frontend.tgz

  build-django-static:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup Env Vars
        run: |
          mkdir secrets
          mkdir secrets/prod
          echo "${{ secrets.WEB_ENV }}" > secrets/prod/web.prod.env
          echo "${{ secrets.WEB_DB_ENV }}" > secrets/prod/web-db.prod.env
          echo "${{ secrets.FRONTEND_ENV }}" > secrets/prod/frontend.prod.env

      - name: Build - Prep
        run: |
          mkdir ./build
          mkdir ./nginx-prod/build

      - name: Django - Build
        run: docker compose --file build_production.yml run django

      - name: Upload artifact for container build jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-django
          path: ./nginx-prod/build/django.tgz

  build-django:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_TARGET_REGION }}
          role-session-name: 'GitHubActions-DeployLayerStack'

      - name: Containers - Build Django
        run: docker build -t 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/production/mapa-django-lambdas:$GITHUB_SHA -t 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/production/mapa-django-lambdas:latest .
        working-directory: django

      - name: Containers - Push to AWS
        run: |
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com
          docker push 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/production/mapa-django-lambdas --all-tags

  deploy-app:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    needs: [build-frontend, build-django-static, build-django]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_TARGET_REGION }}
          role-session-name: 'GitHubActions-DeployLayerStack'

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install CDK and deps
        run: |
          npm install -g aws-cdk
          cd ./cdk
          npm install .
          mkdir build

      - name: Download artifacts for deployment
        uses: actions/download-artifact@v4
        with:
          path: ./cdk/build/

      - name: Move artifacts
        run: |
          cd ./cdk/build/

          tar -xvf build-frontend/frontend.tgz
          rm -rf ./build-frontend/

          mkdir api
          tar -xvf ./build-django/django.tgz --directory ./api/
          rm -rf ./build-django/

      - name: Deploy CDK stacks
        run: |
          cd ./cdk
          cdk deploy MapaInfraStack MapaAppStack MapaStaticSiteStack --context env=production --require-approval never

      - name: Update lambda function code
        run: |
          aws lambda update-function-code --function-name Mapa-Production-Django-App-Lambda --image-uri 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/production/mapa-django-lambdas:latest --region ap-southeast-2
          aws lambda update-function-code --function-name Mapa-Production-Django-Cron-Lambda --image-uri 429260965153.dkr.ecr.ap-southeast-2.amazonaws.com/aws-keithmoss/production/mapa-django-lambdas:latest --region ap-southeast-2

      - name: Run Django migrations
        run: |
          aws lambda wait function-updated-v2 --function-name Mapa-Production-Django-Cron-Lambda --region ap-southeast-2
          aws events put-events --entries '[ { "DetailType": "Run Django Migrations", "Detail": "{ \"event_type\": \"run_migrations\" }", "Resources": [], "Source": "mapa" } ]'

      # - name: Setup Debug Session
      #   uses: csexton/debugger-action@master
